{"version":3,"sources":["apis/streams.js","history.js","actions/types.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.e161c5c0.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'http://localhost:3001'\n});","import { createBrowserHistory } from 'history'; \n\nexport default createBrowserHistory();","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';","import streams from '../apis/streams';\nimport history from '../history';\nimport { \n    SIGN_IN,\n    SIGN_OUT, \n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM \n} from './types';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  const { userId } = getState().auth;  \n  const response = await streams.post('/streams', { ...formValues, userId });\n\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n  history.push('/')\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n\n    dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.patch(`/streams/${id}`, formValues);\n\n    dispatch({ type: EDIT_STREAM, payload: response.data });\n    history.push('/');\n};\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch({ type: DELETE_STREAM, payload: id});\n    history.push('/');\n};","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nclass StreamForm extends React.Component {\n    renderError({ error, touched }) {\n      if (touched && error) {\n        return (\n          <div className=\"ui error message\">\n            <div className=\"header\">{error}</div>\n          </div>\n        );\n      }\n    }\n\n    renderInput = ({ input, label, meta }) => {\n      const className = `field ${meta.error && meta.touched ? ' error' : ''}`;\n      return (\n        <div className={className}>\n          <label>{label}</label>\n          <input {...input} />\n          {this.renderError(meta)}        \n        </div> \n     );\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues);\n    }\n\n    render() {\n      return (\n          <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n              <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\n              <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n              <button className=\"ui button primary\">Submit</button>\n          </form>\n      );\n    }\n}\n\nconst validate = (formValues) => {\n    const errors = {};\n\n    if (!formValues.title) {\n      errors.title = 'You must enter a title';\n    }\n\n    if (!formValues.description) {\n        errors.description = 'You must enter a description';\n    }\n\n    return errors;\n};\n\nexport default reduxForm({\n    form: 'streamForm',\n    validate\n})(StreamForm);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues);\n    };\n\n    render() {\n      return (\n        <div>\n          <h3>Create a Stream</h3>\n          <StreamForm onSubmit={this.onSubmit} />\n        </div>\n      );\n    }\n}\n\n\nexport default connect(null, { createStream })(StreamCreate);","import _ from 'lodash';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamEdit extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) => {\n      this.props.editStream(this.props.match.params.id, formValues);\n    };\n\n    render(){\n      if (!this.props.stream) {   \n        return <div>Loading...</div>;\n      }\n      return (\n          <div>\n              <h3>Edit a Stream</h3>\n              <StreamForm  \n                initialValues={_.pick(this.props.stream, 'title', 'description')}\n                onSubmit={this.onSubmit} \n              />\n          </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream, editStream })(StreamEdit);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = props => {\n  return ReactDOM.createPortal(\n    <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\n        <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\n            <div className=\"header\">{props.title}</div>\n            <div className=\"content\">\n              {props.content}\n            </div>\n            <div className=\"actions\">\n                {props.actions}\n            </div>\n        </div>\n    </div>, \n    document.querySelector('#modal')\n  );\n};\n\nexport default Modal;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\n\nclass StreamDelete extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions() {\n        const {id} = this.props.match.params;\n\n        return (\n            <React.Fragment>\n                <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\n                <Link to=\"/\" className=\"ui button\">Cancel</Link>\n            </React.Fragment>\n        );\n    }\n\n    renderContent() {\n        if (!this.props.stream) {\n            return 'Are You Sure You Want to Delete This Stream?'\n        }\n\n        return `Are You Sure You Want to Delete ${this.props.stream.title}?`\n    }\n\n    render() {\n        return (\n            <Modal \n            title=\"Delete Stream\"  \n            content={this.renderContent()}\n            actions={this.renderActions()}\n            onDismiss={() => history.push('/')}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { streams: state.streams[ownProps.match.params.id] }\n};\n\nexport default connect(mapStateToProps, { fetchStream, deleteStream })(StreamDelete);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions';\n\nclass StreamList extends React.Component {\n    componentDidMount() {\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n          return (\n              <div className=\"right floated content\">\n                  <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n                      Edit\n                  </Link>\n                  <Link to={`/streams/delete/${stream.id}`}className=\"ui button negative\">\n                      Delete\n                  </Link>\n              </div>\n          )\n      }\n    }\n\n    renderList() {\n        return this.props.streams.map((stream) => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large middle aligned icon camera\" />\n                    <div className=\"content\">\n                        <Link to={`/streams/${stream.id}`} className=\"header\">\n                          {stream.title}\n                        </Link>\n                        <div className=\"description\">\n                          {stream.description}\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    renderCreate() {\n      if (this.props.isSignedIn) {\n          return (\n              <div style={{ textAlign: 'center'}}>\n                  <Link to=\"/streams/new\" className=\"ui button primary\">\n                    Create Stream\n                  </Link>\n              </div>\n          )\n      }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n                {this.renderCreate()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { \n        streams: Object.values(state.streams), \n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    };\n};\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    render() {\n      if (!this.props.stream) {\n          return <div>Loading...</div>;\n      }\n\n      const { title, description } = this.props.stream;\n\n      return (\n        <div>\n          <h1>{title}</h1>\n          <h5>{description}</h5>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id]};\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n      componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '938883104650-5nmii8llc08qe3ldq7is663sjugd159b.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = (isSignedIn) => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    onSignOutClick = () => {\n      this.auth.signOut();\n    };\n\nrenderAuthButton() {\n    if (this.props.isSignedIn === null) {\n        return null;\n    } else if (this.props.isSignedIn) {\n        return (\n            <button onClick={this.onSignOutClick} className=\"ui red google button\">\n              <i className=\"google icon\" />\n              Sign Out\n            </button>\n            );\n    } else {\n        return (\n            <button onClick={this.onSignInClick} className=\"ui red google button\">\n              <i className=\"google icon\" />\n              Sign In with Google\n            </button>\n        );\n    }\n}\n\n    render() {\n        return <div>{this.renderAuthButton()}</div>;\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn }\n};\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = () => {\n    return (\n        <div className=\"ui secondary pointing menu\">\n          <Link to=\"/\" className=\"item\">\n              Streamy\n          </Link>\n          <div className=\"right menu\">\n            <Link to=\"/\" className=\"item\">\n                All Streams\n            </Link>\n            <GoogleAuth />\n          </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport StreamCreate from './streams/StreamCreate';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport Header from './Header';\nimport history from '../history';\n\nconst App = () => {\n    return (\n      <div className=\"ui container\">\n        <Router history={history}>\n          <div>\n           <Header/>\n           <Switch>\n            <Route path=\"/\" exact component={StreamList} />\n            <Route path=\"/streams/new\" exact component={StreamCreate} />\n            <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\n            <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\n            <Route path=\"/streams/:id\" exact component={StreamShow} />\n           </Switch>\n          </div>  \n        </Router>\n      </div>\n    );\n};\n\nexport default App;","import { SIGN_IN, SIGN_OUT } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n      case SIGN_IN:\n        return {...state, isSignedIn: true, userId: action.payload };\n      case SIGN_OUT:\n        return {...state, isSignedIn: false, userId: null };\n      default:\n          return state;\n  }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  form: formReducer,\n  streams: streamReducer\n});","import _ from 'lodash';\nimport  {\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  CREATE_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM\n} from '../actions/types';\n\nexport default (state = {}, action ) => {\n    switch (action.type) {\n        case FETCH_STREAMS:    \n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case FETCH_STREAM:\n            return {...state, [action.payload.id]: action.payload };\n        case CREATE_STREAM:\n            return {...state, [action.payload.id]: action.payload };\n        case EDIT_STREAM:\n            return {...state, [action.payload.id]: action.payload };\n        case DELETE_STREAM:\n            return _.omit(state, action.payload);\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n  );\n\nReactDOM.render(\n  <Provider store={store}>\n  <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\n"],"sourceRoot":""}